// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TiktokGame2Server.Entities;

#nullable disable

namespace TiktokGame2Server.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250717123512_changeTableName9")]
    partial class changeTableName9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TiktokGame2Server.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PlayerId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PlayerId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.ChapterNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("ChaptersNodes");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.ChapterNodeStar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<int>("ChapterNodeId")
                        .HasColumnType("integer");

                    b.Property<int>("Process")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.HasIndex("ChapterNodeId");

                    b.ToTable("ChapterNodeStars");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.Account", b =>
                {
                    b.HasOne("TiktokGame2Server.Entities.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.Chapter", b =>
                {
                    b.HasOne("TiktokGame2Server.Entities.Player", null)
                        .WithMany("Chapters")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.ChapterNode", b =>
                {
                    b.HasOne("TiktokGame2Server.Entities.Chapter", null)
                        .WithMany("ChapterNodes")
                        .HasForeignKey("ChapterId");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.ChapterNodeStar", b =>
                {
                    b.HasOne("TiktokGame2Server.Entities.Chapter", null)
                        .WithMany("ChapterNodeStars")
                        .HasForeignKey("ChapterId");

                    b.HasOne("TiktokGame2Server.Entities.ChapterNode", "ChapterNode")
                        .WithMany()
                        .HasForeignKey("ChapterNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChapterNode");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.Chapter", b =>
                {
                    b.Navigation("ChapterNodeStars");

                    b.Navigation("ChapterNodes");
                });

            modelBuilder.Entity("TiktokGame2Server.Entities.Player", b =>
                {
                    b.Navigation("Chapters");
                });
#pragma warning restore 612, 618
        }
    }
}
